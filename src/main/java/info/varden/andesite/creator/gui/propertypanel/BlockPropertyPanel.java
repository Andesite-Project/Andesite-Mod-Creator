/*
 * The MIT License
 *
 * Copyright 2015 Marius.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package info.varden.andesite.creator.gui.propertypanel;

import info.varden.andesite.action.BlockHardnessAction;
import info.varden.andesite.action.BlockLightValueAction;
import info.varden.andesite.action.BlockParticleGravityAction;
import info.varden.andesite.action.BlockSlipperinessAction;
import info.varden.andesite.action.BlockStepSoundAction;
import info.varden.andesite.core.Action;
import info.varden.andesite.core.AndesiteProject;
import info.varden.andesite.core.BlockAction;
import info.varden.andesite.core.Utils;
import info.varden.andesite.creator.UIUtils;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Marius
 */
public class BlockPropertyPanel extends javax.swing.JPanel {

    private final String blockId;
    private final ArrayList<BlockAction> actions = new ArrayList<BlockAction>();
    private final AndesiteProject project;
    
    /**
     * Creates new form BlockPropertyPanel
     */
    public BlockPropertyPanel(String id, AndesiteProject project) {
        initComponents();
        this.blockId = id;
        this.project = project;
        Action[] actions = project.getAllActions();
        for (Action act : actions) {
            if (act instanceof BlockAction) {
                if (((BlockAction) act).getBlockId().equals(id)) {
                    this.actions.add((BlockAction) act);
                    if (act instanceof BlockLightValueAction) {
                        jButton2.setEnabled(true);
                        jSpinner1.setValue(((BlockLightValueAction) act).getLightValue() * 15F);
                    } else if (act instanceof BlockStepSoundAction) {
                        BlockStepSoundAction apa = (BlockStepSoundAction) act;
                        jButton3.setEnabled(true);
                        jComboBox1.setSelectedItem(apa.getSound().getSoundName());
                        jComboBox2.setSelectedItem(apa.getSound().getBreakSound());
                        jSpinner5.setValue(apa.getSound().getVolume() * 100F);
                        jSpinner6.setValue(apa.getSound().getFrequency());
                    } else if (act instanceof BlockHardnessAction) {
                        jButton4.setEnabled(true);
                        jSpinner3.setValue(((BlockHardnessAction) act).getHardness());
                        jSpinner2.setValue(((BlockHardnessAction) act).getResistance());
                    } else if (act instanceof BlockSlipperinessAction) {
                        jButton6.setEnabled(true);
                        jSpinner4.setValue(((BlockSlipperinessAction) act).getSlipperiness() * 100F);
                    }
                }
            }
        }
        jSpinner1.addChangeListener(new LightValueChangeListener());
        jSpinner5.addChangeListener(new StepSoundChangeListener());
        jSpinner6.addChangeListener(new StepSoundChangeListener());
        jComboBox1.addItemListener(new StepSoundItemListener());
        jComboBox2.addItemListener(new StepSoundItemListener());
        jSpinner2.addChangeListener(new HardnessChangeListener());
        jSpinner3.addChangeListener(new HardnessChangeListener());
        jSpinner4.addChangeListener(new SlipperinessChangeListener());
        jSpinner7.addChangeListener(new ParticleGravityChangeListener());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jSpinner3 = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jSpinner4 = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jSpinner5 = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jSpinner6 = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSpinner7 = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("minecraft:dirt");

        jLabel3.setText("Light value:");
        jLabel3.setToolTipText("The light value determines the luminosity of the block. Valid values range from 0 (no light emission) to 15 (glows bright).");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 15, 1));
        UIUtils.setSpinnerEditCommits(jSpinner1, true);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "stone", "wood", "gravel", "grass", "cloth", "sand", "snow", "ladder" }));

        jLabel4.setText("Step sound:");
        jLabel4.setToolTipText("Step sound determines the sound that is played when a player or mob walks across the block.");

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(0.1f)));

        jLabel5.setText("Resistance:");
        jLabel5.setToolTipText("Resistance determines this block's resistance to explosions.");

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(0.1f)));

        jLabel6.setText("Hardness:");
        jLabel6.setToolTipText("Hardness determines the amount of time required mining to break the block.");

        jSpinner4.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));

        jLabel7.setText("Slipperiness:");
        jLabel7.setToolTipText("Slipperiness determines how fast and long entities and players slide across the block.");

        jLabel8.setText("%");

        jButton2.setText("Reset");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Reset");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Reset");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setText("Reset");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "stone", "wood", "gravel", "grass", "cloth", "sand", "snow", "ladder" }));

        jLabel9.setText("Break sound:");
        jLabel9.setToolTipText("Break sound determines the sound that is played when placed or broken by a player.");

        jSpinner5.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel10.setText("Volume:");
        jLabel10.setToolTipText("Volume determines the loudness of the step and break sounds.");

        jSpinner6.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), null, null, Float.valueOf(0.1f)));

        jLabel11.setText("Frequency:");
        jLabel11.setToolTipText("Frequency determines the pitch of the step and break sounds.");

        jLabel12.setText("%");

        jButton7.setText("Reset");
        jButton7.setEnabled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel2.setText("m/s²");
        jLabel2.setToolTipText("");

        jSpinner7.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), null, null, Float.valueOf(1.0f)));

        jLabel13.setText("Particle gravity:");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "stone", "wood", "gravel", "grass", "cloth", "sand", "snow", "ladder" }));

        jLabel14.setText("Place sound:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)
                            .addComponent(jLabel14)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel13))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSpinner7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addComponent(jSpinner3)
                            .addComponent(jSpinner2)
                            .addComponent(jSpinner6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSpinner5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12))
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, 0, 412, Short.MAX_VALUE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSpinner1)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSpinner4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel13)
                    .addComponent(jButton7))
                .addGap(432, 432, 432))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Reset light value action
        BlockLightValueAction[] acts = Utils.getActionsOfType(actions.toArray(new BlockAction[0]), BlockLightValueAction.class);
        for (BlockLightValueAction act : acts) {
            this.project.removeAction(act);
            this.actions.remove(act);
        }
        jButton2.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Reset step sound action
        BlockStepSoundAction[] acts = Utils.getActionsOfType(actions.toArray(new BlockAction[0]), BlockStepSoundAction.class);
        for (BlockStepSoundAction act : acts) {
            this.project.removeAction(act);
            this.actions.remove(act);
        }
        jButton3.setEnabled(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Reset resistance action
        BlockHardnessAction[] acts = Utils.getActionsOfType(actions.toArray(new BlockAction[0]), BlockHardnessAction.class);
        for (BlockHardnessAction act : acts) {
            this.project.removeAction(act);
            this.actions.remove(act);
        }
        jButton4.setEnabled(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // Reset slipperiness action
        BlockSlipperinessAction[] acts = Utils.getActionsOfType(actions.toArray(new BlockAction[0]), BlockSlipperinessAction.class);
        for (BlockSlipperinessAction act : acts) {
            this.project.removeAction(act);
            this.actions.remove(act);
        }
        jButton6.setEnabled(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // Reset particle gravity action
        BlockParticleGravityAction[] acts = Utils.getActionsOfType(actions.toArray(new BlockAction[0]), BlockParticleGravityAction.class);
        for (BlockParticleGravityAction act : acts) {
            this.project.removeAction(act);
            this.actions.remove(act);
        }
        jButton7.setEnabled(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private class LightValueChangeListener implements ChangeListener {

        @Override
        public void stateChanged(ChangeEvent e) {
            jButton2.setEnabled(true);
            BlockLightValueAction[] acts = Utils.getActionsOfType(actions.toArray(new BlockAction[0]), BlockLightValueAction.class);
            
            float lightValue = ((Integer) jSpinner1.getValue()).floatValue() / 15F;
            
            if (acts.length > 0) {
                acts[0].setLightValue(lightValue);
            } else {
                BlockLightValueAction act = BlockLightValueAction.create(blockId, lightValue);
                actions.add(act);
                project.addAction(act);
            }
        }
        
    }
    
    private class StepSoundChangeListener implements ChangeListener {

        @Override
        public void stateChanged(ChangeEvent e) {
            stepSoundChanged();
        }
        
    }
    
    private class StepSoundItemListener implements ItemListener {

        @Override
        public void itemStateChanged(ItemEvent e) {
            stepSoundChanged();
        }

    }
    
    private void stepSoundChanged() {
        jButton3.setEnabled(true);
        BlockStepSoundAction[] acts = Utils.getActionsOfType(actions.toArray(new BlockAction[0]), BlockStepSoundAction.class);
        
        String soundName = ((String) jComboBox1.getSelectedItem()).toLowerCase();
        String breakSound = ((String) jComboBox2.getSelectedItem()).toLowerCase();
        float volume = ((Integer) jSpinner5.getValue()).floatValue() / 100F;
        float freq = (Float) jSpinner6.getValue();
        
        if (acts.length > 0) {
            acts[0].getSound().setSoundName(soundName);
            acts[0].getSound().setBreakSound(breakSound);
            acts[0].getSound().setVolume(volume);
            acts[0].getSound().setFrequency(freq);
        } else {
            BlockStepSoundAction act = BlockStepSoundAction.create(blockId, soundName, breakSound, volume, freq);
            actions.add(act);
            project.addAction(act);
        }
    }
    
    private class HardnessChangeListener implements ChangeListener {

        @Override
        public void stateChanged(ChangeEvent e) {
            jButton4.setEnabled(true);
            BlockHardnessAction[] acts = Utils.getActionsOfType(actions.toArray(new BlockAction[0]), BlockHardnessAction.class);
            
            float hardness = (Float) jSpinner3.getValue();
            float resistance = (Float) jSpinner2.getValue();
            
            if (acts.length > 0) {
                acts[0].setHardness(hardness);
                acts[0].setResistance(resistance);
            } else {
                BlockHardnessAction act = BlockHardnessAction.create(blockId, hardness, resistance);
                actions.add(act);
                project.addAction(act);
            }
        }
        
    }
    
    private class SlipperinessChangeListener implements ChangeListener {

        @Override
        public void stateChanged(ChangeEvent e) {
            jButton6.setEnabled(true);
            BlockSlipperinessAction[] acts = Utils.getActionsOfType(actions.toArray(new BlockAction[0]), BlockSlipperinessAction.class);
            
            float value = (Float) jSpinner4.getValue() / 100F;
            
            if (acts.length > 0) {
                acts[0].setSlipperiness(value);
            } else {
                BlockSlipperinessAction act = BlockSlipperinessAction.create(blockId, value);
                actions.add(act);
                project.addAction(act);
            }
        }
        
    }
    
    private class ParticleGravityChangeListener implements ChangeListener {

        @Override
        public void stateChanged(ChangeEvent e) {
            jButton7.setEnabled(true);
            BlockParticleGravityAction[] acts = Utils.getActionsOfType(actions.toArray(new BlockAction[0]), BlockParticleGravityAction.class);
            
            float value = (Float) jSpinner7.getValue();
            
            if (acts.length > 0) {
                acts[0].setParticleGravity(value);
            } else {
                BlockParticleGravityAction act = BlockParticleGravityAction.create(blockId, value);
                actions.add(act);
                project.addAction(act);
            }
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JSpinner jSpinner6;
    private javax.swing.JSpinner jSpinner7;
    // End of variables declaration//GEN-END:variables
}
